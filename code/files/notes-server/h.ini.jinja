# File managed by Salt Stack in hypothesis/init.sls DO NOT EDIT DIRECTLY!
[app:main]
use: egg:notes_server

api.endpoint: /api
api.key: {{ notes_url }}

api.secret: {{ salt['pillar.get']('accounts:notes:secret', 'NOTASECRET') }}

webplatform.client_id: {{ accounts_client_id }}
webplatform.client_secret: {{ accounts_client_secret }}

webplatform.authorize: {{ accounts_auth }}
webplatform.token: {{ accounts_token }}
webplatform.session_read: {{ accounts_session_read }}
webplatform.session_recover: {{ accounts_session_recover }}


es.host: {{ elastic_endpoint|default('http://127.0.0.1:9200') }}
es.index: notes

multiauth.policies: h.auth.local.oauth h.api

pyramid.includes:
    pyramid_mailer
    pyramid_tm

mail.default_sender: "WebPlatform Specs Notes Archiver" <{{ salt['pillar.get']('infra:notes:sender_email', 'root@localhost') }}>
mail.host: {{ salt['pillar.get']('infra:notes:sender_relay', 'localhost') }}

webassets.base_dir: notes_server:static
webassets.base_url: assets/notes-server
webassets.bundles: notes_server:assets.yaml h:assets.yaml
webassets.cache_max_age: 86400
webassets.coffee_no_bare: True
webassets.static_view: True


[server:main]
use: egg:gunicorn
worker_class: gevent
port: {{ salt['pillar.get']('infra:notes:port', 8000) }}
host: {{ salt['pillar.get']('infra:notes:host', '127.0.0.1') }}

[loggers]
keys = root, gunicorn.error


[handlers]
keys = console


[formatters]
keys = generic


[logger_root]
handlers = console


[logger_gunicorn.error]
handlers =
qualname = gunicorn.error


[handler_console]
class = StreamHandler
args = ()
formatter = generic


[formatter_generic]
format = %(asctime)s [%(process)d] [%(levelname)s] %(message)s

