<?php

## Managed by Salt Stack, please DO NOT TOUCH, or ALL CHANGES WILL be LOST!
## source {{ source }}

{%- set db_creds      = salt['pillar.get']('accounts:wiki:db') -%}
{%- set db_servers    = salt['pillar.get']('infra:db_servers:mysql:slaves', []) -%}
{%- set secrets       = salt['pillar.get']('accounts:wiki:secrets') -%}
{%- set swift_backend = salt['pillar.get']('accounts:swift:dreamhost') %}
{%- set masterdb_ip   = salt['pillar.get']('infra:hosts_entries:masterdb') %}

if ( !defined( 'MEDIAWIKI' ) ) {
        exit;
}

$wgDefaultRobotPolicy = 'noindex,nofollow';

##
## Pillar db_servervs
##
##     salt-call pillar.get infra:db_servers:mysql:slaves
##
## Data we had at last highstate:
##
##     "{{ db_servers }}"
##
## NOTE: Ideally it would be salt mine. But its not reliable. We cannot get reliable data after adding/removing VMs
##
##################### database settings #####################
$wgDBname = "wptestwiki";
##
## The Master DB server, the only one who should receive writes to
##
$wgDBservers = array(
        array(  'host'     => "{{ masterdb_ip|default('127.0.0.1') }}",
                'dbname'   => $wgDBname,
                'user'     => "{{ db_creds.username|default('root') }}",
                'password' => "{{ db_creds.password|default('') }}",
                'type'     => "mysql",
                'flags'    => DBO_DEFAULT,
                'load'     => 0 # <-- What makes MediaWiki to
                                #     know if he can send writes to
        )
);
{% if db_servers is iterable and db_servers|count >= 1 %}
if ( !$wgCommandLineMode ) {
##
## The secondary DB servers. Only reads.
##
{% for ip_addr in db_servers %}
$wgDBservers[] = array(
                'host'     => "{{ ip_addr }}",
                'dbname'   => $wgDBname,
                'user'     => "{{ db_creds.username|default('root') }}",
                'password' => "{{ db_creds.password|default('') }}",
                'type'     => "mysql",
                'flags'    => DBO_DEFAULT,
                'load'     => 1
        );
{% endfor %}
}
{% endif %}
$wgDBtype = "mysql";
##################### database settings #####################

$wgArticlePath = '/test/$1';
$wgScriptPath  = '/t';

$wgSecretKey     = '{{ secrets['key']|default('foo') }}';
$wgUpgradeKey    = '{{ secrets['upgrade']|default('bar') }}';
$wgCaptchaSecret = '{{ secrets['captcha']|default('baz') }}';

# vim: set ft=php expandtab:

