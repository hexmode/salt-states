<VirtualHost *:80>
  ServerName  	www.{{ tld }}

  DocumentRoot 	/var/www

  # Removing any cookies from here, we do not want them here
  RequestHeader unset Cookie
  Header unset Set-Cookie

  # http://www.mnot.net/blog/2007/05/15/expires_max-age
  ExpiresActive On
  ExpiresDefault "access plus 1 day"
  #Header set Cache-Control "max-age=3600, must-revalidate"  # Should be done already by ExpiresActive

  <IfModule mod_headers.c>
    Header set X-UA-Compatible "IE=edge,chrome=1"
    # mod_headers can't match by content-type, but we don't want to send this header on *everything*...
    <FilesMatch "\.(appcache|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svg|svgz|ttf|vcf|webm|webp|woff|xml|xpi)$">
      Header unset X-UA-Compatible
    </FilesMatch>
  </IfModule>

  <IfModule mod_setenvif.c>
    <IfModule mod_headers.c>
      # mod_headers, y u no match by Content-Type?!
      <FilesMatch "\.(gif|ico|jpe?g|png|svg|svgz|webp)$">
        SetEnvIf Origin ":" IS_CORS
        Header set Access-Control-Allow-Origin "*" env=IS_CORS
      </FilesMatch>
    </IfModule>
  </IfModule>

  <IfModule mod_headers.c>
    <FilesMatch "\.(eot|font.css|otf|ttc|ttf|woff)$">
      Header set Access-Control-Allow-Origin "*"
    </FilesMatch>
  </IfModule>

  <Directory />
    Options FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  <Directory /var/www/>
    Options FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  <Directory /srv/webplatform/lumberjack-web>
    Require all granted
  </Directory>

  # Possible values include: debug, info, notice, warn, error, crit,
  # alert, emerg.
  LogLevel  warn
  ErrorLog  syslog:local1
  CustomLog /var/log/apache2/access.log combined

  Alias /talk/chatlogs   /srv/webplatform/lumberjack-web
  Alias /chatlogs        /srv/webplatform/lumberjack-web

  RewriteEngine on

  # Enforce well-known over SSL, under www.{{ tld }} domain name
  # Assuming we want to send to www.{{ tld }}/.well-known/...
  RewriteCond   %{REQUEST_URI}     ^/.well-known
  RewriteRule   ^/.well-known(.*)$ https://{{ tld }}/.well-known$1  [R=301,L]

  RedirectMatch ^/(wiki|docs)/?$  https://docs.{{ tld }}/wiki/Main_Page
  RewriteCond   %{REQUEST_URI}    ^/(wiki|docs)
  RewriteRule   ^/(docs|wiki)(.*) https://docs.{{ tld }}/wiki$2     [R=301,L]

  # per http://lists.w3.org/Archives/Public/public-webplatform/2013Mar/0174.html
  RewriteCond %{REQUEST_URI}      ^/(beginners|css|dom|concepts|accessibility|svg|html|javascript|apis)
  RewriteRule ^(.*)$              https://docs.{{ tld }}/wiki$1     [R=301,L]

  # Error pages, served as static PHP handler with appropriate HTTP headers
  ErrorDocument 404 /errors/index.php?s=404
  ErrorDocument 503 /errors/index.php?s=503
  ErrorDocument 500 /errors/index.php?s=500
  ErrorDocument 403 /errors/index.php?s=403
</VirtualHost>


# Allow non SSL view, but still enforce to go to www...
<VirtualHost *:80>
  ServerName  	{{ tld }}

  RequestHeader unset Cookie
  Header        unset Set-Cookie

  # http://www.mnot.net/blog/2007/05/15/expires_max-age
  ExpiresActive  On
  ExpiresDefault "access plus 1 day"

  # Possible values include: debug, info, notice, warn, error, crit,
  # alert, emerg.
  LogLevel  warn
  ErrorLog  syslog:local1
  CustomLog /var/log/apache2/access.log combined

  RewriteEngine on

  # Enforce well-known over SSL
  RewriteCond   %{REQUEST_URI}     ^/.well-known
  RewriteRule   ^/.well-known(.*)$ https://%{HTTP_HOST}/.well-known$1  [R=301,L]

  RewriteCond   %{REQUEST_METHOD}  !PURGE
  RewriteCond   %{REQUEST_URI}     ^/(wiki|docs)/?$
  RewriteRule   ^/(wiki|docs)/?$   https://docs.{{ tld }}/wiki/Main_Page [R=301,L]

  RewriteCond   %{REQUEST_METHOD}  !PURGE
  RewriteCond   %{REQUEST_URI}     ^/(wiki|docs)
  RewriteRule   ^/(docs|wiki)(.*)  https://docs.{{ tld }}/wiki$2  [R=301,L]

  # per http://lists.w3.org/Archives/Public/public-webplatform/2013Mar/0174.html
  RewriteCond   %{REQUEST_METHOD}  !PURGE
  RewriteCond   %{REQUEST_URI}     ^/(beginners|css|dom|concepts|accessibility|svg|html|javascript|apis)
  RewriteRule   ^(.*)$             https://docs.{{ tld }}/wiki$1   [R=301,L]

  # Redirect anything else toward www...
  RewriteCond   %{HTTP_HOST}       !^www\. [NC]
  RewriteCond   %{HTTP_HOST}       !^$
  RewriteRule   ^/?(.*)            https://www.%{HTTP_HOST}/$1 [L,R,NE]

  # No Error pages, Anything else should be handled elsewhere anyway
</VirtualHost>

# vim: et ai ts=2 sw=2 st=apache ft=apache

