server {
    server_name {{ subDomainName }}.{{ tld }};

    listen 80;
    server_tokens off;
    return 301 https://{{ subDomainName }}.{{ tld }}$request_uri;
}

server {
  server_name {{ subDomainName }}.{{ tld }};

  listen 443 ssl spdy;
  server_tokens off;

  root  /srv/webplatform/buggenie/thebuggenie;
  index index.php;

  ssl                 on;
  ssl_certificate     /etc/ssl/webplatform/public_wildcard_201407.pem;
  ssl_certificate_key /etc/ssl/webplatform/201407.key;

  access_log    /var/log/nginx/{{ subDomainName }}.access.log;
  error_log     /var/log/nginx/{{ subDomainName }}.error.log;


  location ~* .(gif|jpg|jpeg|png|ico|js|css)$ {
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    rewrite ^/(.*)$ /file.php?f=$1;
  }

  location / {
    rewrite ^/(.*)$ /index.php?url=$1;
  }

  location ~ \.(hh|php)$ {
    fastcgi_keep_conn	on;
    fastcgi_pass	10.10.10.118:9000;
    fastcgi_index 	index.php;
    fastcgi_param	SCRIPT_FILENAME		$document_root$fastcgi_script_name;

    proxy_set_header	X-Real-IP		$remote_addr;
    proxy_set_header	X-Forwarded-For		$proxy_add_x_forwarded_for;

    #variables to make the $_SERVER populate in PHP
    fastcgi_param	SCRIPT_FILENAME		$document_root$fastcgi_script_name;
    fastcgi_param	QUERY_STRING		$query_string;
    fastcgi_param	REQUEST_METHOD		$request_method;
    fastcgi_param	CONTENT_TYPE		$content_type;
    fastcgi_param	CONTENT_LENGTH		$content_length;

    fastcgi_param	SCRIPT_NAME		$fastcgi_script_name;

    fastcgi_param	GATEWAY_INTERFACE	CGI/1.1;
    fastcgi_param	SERVER_SOFTWARE		nginx/$nginx_version;

    fastcgi_param	REQUEST_URI             $request_uri;
    fastcgi_param	DOCUMENT_ROOT           $document_root;
    fastcgi_param	SERVER_PROTOCOL         $server_protocol;

    fastcgi_param	REMOTE_ADDR		$remote_addr;
    fastcgi_param	REMOTE_PORT		$remote_port;
    fastcgi_param	SERVER_ADDR		$server_addr;
    fastcgi_param	SERVER_PORT		$server_port;
    fastcgi_param	SERVER_NAME		$server_name;

    fastcgi_param	HTTPS			$https if_not_empty;

    # PHP only, required if PHP was built with --enable-force-cgi-redirect
    fastcgi_param	REDIRECT_STATUS         200;
  }
}

