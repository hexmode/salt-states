; vim: ai syntax=bindzone tabstop=4 softtabstop=4 shiftwidth=4
$TTL 3600
@   SOA salt.{{ level }}.wpdn. hostmaster.webplatform.org. (
      {{ gdnsd_timestamp }} ; serial
      7200       ; refresh
      30M        ; retry
      3D         ; expire
      900        ; ncache
)

@		NS	salt.{{ level }}.wpdn.

;
; Hosts entries
;
;     salt-call pillar.get infra:hosts_entries
;
;
{% for name,ip_addr in hosts_entries.items() %}
{%- if ip_addr -%}
{{ name }}		A	{{ ip_addr }}
{% endif -%}
{% endfor %}

{% for ip_addr in elasticsearch_nodes %}
{%- if ip_addr -%}
es.backend		A	{{ ip_addr }}
elasticsearch	A	{{ ip_addr }}
{% endif -%}
{% endfor %}

{% set mine_data = salt['mine.get']('*', 'network.ip_addrs').items()|sort(attribute=0) -%}
;
;  Mine network.ip_addrs:
;
;      salt-call mine.get \* network.ip_addrs
;
{#
 # Make sure ONLY IP addresses that starts by 10.10 should get here, maybe with grain ip4_interfaces:eth0 #TODO
 #
 # Following Python wont work in Jinja
 #
 #     addr = [b for b in addrs if b.startswith('10.10') == True]
 #     // addr[0] would contain what we want.
 #
 # ref:
 #   - http://stackoverflow.com/questions/24041885/conditionally-join-a-list-of-strings-in-jinja
 #}
{%- if mine_data %}
{%- for minion,addrs in mine_data %}
{{ minion }}	A	{% for i in addrs %}{% if i|truncate(5, True, '') == '10.10' %}{{ i }}{% endif %}{% endfor %}
{%- endfor %}
{%- endif %}

