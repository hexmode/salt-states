# REMINDER
# To upgrade version, do not forget
# ./bootstrap
[app:main]
use: egg:h

# API configuration
#
# Customize the key or leave it as the default. If the key is present without
# a secret, initializes the consumer in the API consumer table with a random
# secret.
#
# Set `api.endpoint`, `api.url`, or both. With `api.endpoint` as a path,
# configures an embedded annotator-store on that path. With `api.url`,
# urls can be generated with an alternate domain. With `api.url` but  without
# `api.endpoint`, the storage can be delegated to a remote API server.
#
# If you embed the api with `api.endpoint` and use `api.url` to address route
# requests to this server through a different domain and path, tell pyramid
# that the api has a virtual root by ensuring the `X-Vhm-Root` HTTP header is
# passed with the value `/@@api_virtual` on requests to the API domain.
#
# Note: Using `api.url` without `api.endpoint` is not currently supported.
#
# Example:
#    api.endpoint: /api
#    api.url: https://api.example.com
#    api.key: fdf077b5-c210-4744-b1e2-db4c577d195e
#    api.secret: fb8557f0-34ba-462e-92af-54620a1d87c7
api.endpoint: /api
api.key: 00000000-0000-0000-0000-000000000000
api.secret: f52c57f0-36ba-761e-32df-28621a1d26c1

# ElasticSearch configuration
es.host: http://elastic2.dho.wpdn:9200
es.index: notes
es.compatibility: pre-1.0.0

# User and group framework settings -- see horus documentation
horus.login_redirect: /
horus.logout_redirect: /
#horus.activate_redirect: /
#horus.register_redirect: /
#horus.autologin: False
#horus.allow_email_auth: False
#horus.require_activation: True

# Authorization settings -- see pyramid_multiauth documentation
multiauth.policies: h.api h.models

# Mail server configuration -- see the pyramid_mailer documentation
#mail.default_sender: "Annotation Daemon" <no-reply@localhost>
#mail.host: localhost
#mail.port: 25
mail.default_sender: "Annotation Daemon" <notifier-notes@webplatform.org>
mail.host: mail.webplatform.org
mail.port: 25

# Include any deployment-specific pyramid add-ons here
pyramid.includes:
   deform_bootstrap
   pyramid_deform
   pyramid_mailer

# Change or append to override templates
pyramid_deform.template_search_path: h:templates/deform

# Session settings --  see the beaker documentation
# Example:
#   session.type = file
#   session.data_dir = %(here)s/data/sessions/data
#   session.lock_dir = %(here)s/data/sessions/lock
#   session.secret: 535510n_53cr37
#   session.secure: True
#session.type: memory

# SQLAlchemy configuration -- See SQLAlchemy documentation
sqlalchemy.url: sqlite:///h.db

# Static asset configuration -- see webassets documentation
# Until the next pyramid_webassets, don't change these.
# Example:
#   webassets.base_dir: /srv/www/static
#   webassets.base_url: https://static.example.com
webassets.base_dir: h:
webassets.base_url: /assets
webassets.cache_max_age: 86400
webassets.coffee_no_bare: True
webassets.static_view: True
webassets.debug: False
webassets.versions: hash

[server:main]
use: egg:gunicorn
worker_class: gevent
host: 127.0.0.1
port: 5000
#host: unix://tmp/hypothesis.sock (TODO)

[loggers]
keys = root, gunicorn.access, gunicorn.error, h, sqlalchemy


[handlers]
keys = console


[formatters]
keys = generic


[logger_root]
level = WARN
handlers = console


[logger_gunicorn.error]
level = WARN
handlers =
qualname = gunicorn.error


[logger_gunicorn.access]
level = INFO
handlers =
qualname = gunicorn.access


[logger_h]
level = WARN
handlers =
qualname = h


[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine


[handler_console]
class = StreamHandler
args = (sys.stderr,)
formatter = generic


[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
